Input: What direction is the Bluesky going?
Output:
{
    "node": "node1",
    "type": "attribute-of",
    "argument-count": 2,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "apply-property",
        "argument-count": 3,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": "STATE",
        "argument2": "id",
        "argument3": "Bluesky"
    },
    "argument2": "direction"
}
Input: How many ships are going north?
Output:
{
    "node": "node1",
    "type": "count",
    "argument-count": 1,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "apply-property",
        "argument-count": 3,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": "STATE",
        "argument2": "direction",
        "argument3": "north"
    }
}
Input: When the Bluesky was heading south where was the Bluesky going?
Output:
{
    "node": "node1",
    "type": "attribute-of",
    "argument-count": 2,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "apply-property",
        "argument-count": 3,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "when",
            "argument-count": 1,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": {
                "node": "node4",
                "type": "apply-property",
                "argument-count": 3,
                "negation": false,
                "results": {
                    "node": "node4-results"
                },
                "argument1": {
                    "node": "node5",
                    "type": "apply-property",
                    "argument-count": 3,
                    "negation": false,
                    "results": {
                        "node": "node5-results"
                    },
                    "argument1": "STATE",
                    "argument2": "id",
                    "argument3": "Bluesky"
                },
                "argument2": "direction",
                "argument3": "south"
            }
        },
        "argument2": "id",
        "argument3": "Bluesky"
    },
    "argument2": "next-port"
}
Input: How fast is the Blueksy in km/h?
Output:
{
    "node": "node1",
    "type": "convert-units",
    "argument-count": 3,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": "STATE",
            "argument2": "id",
            "argument3": "Bluesky"
        },
        "argument2": "speed"
    },
    "argument2": "knots",
    "argument3": "kph"
}
Input: How many km apart are the Bluesky and port-A?
Output:
{
    "node": "node1",
    "type": "haversine-formula",
    "argument-count": 2,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "apply-property",
        "argument-count": 3,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": "STATE",
        "argument2": "id",
        "argument3": "Bluesky"
    },
    "argument2": {
        "node": "node3",
        "type": "apply-property",
        "argument-count": 3,
        "negation": false,
        "results": {
            "node": "node3-results"
        },
        "argument1": "STATE",
        "argument2": "id",
        "argument3": "port-A"
    }
}
Input: What is the max heading of the ships going north?
Output:
{
    "node": "node1",
    "type": "max",
    "argument-count": 1,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": "STATE",
            "argument2": "direction",
            "argument3": "north"
        },
        "argument2": "heading"
    }
}
Input: Where is the Bluesky?
Output:
{
    "node": "node1",
    "type": "join",
    "argument-count": 2,
    "negation": false,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "answer-node": true,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": "STATE",
            "argument2": "id",
            "argument3": "Bluesky"
        },
        "argument2": "latitude"
    },
    argument2: {
        "node": "node4",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "answer-node": true,
        "results": {
            "node": "node4-results"
        },
        "argument1": "node3",
        "argument2": "longitude"
    }
}
Input: While the Bluesky was traveling to port-A what was the max speed of the Bluesky?
Output:
{
    "node": "node1",
    "type": "max",
    "argument-count": 1,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
          "node": "node3",
          "type": "apply-property",
          "argument-count": 3,
          "negation": false,
          "results": {
            "node": "node3-results"
          },
          "argument1": {
            "node": "node4",
            "type": "while",
            "argument-count": 1,
            "negation": false,
            "results": {
                "node": "node4-results"
            },
            "argument1": {
              "node": "node5",
              "type": "apply-property",
              "argument-count": 3,
              "negation": false,
              "results": {
                "node": "node5-results"
              },
              "argument1": {
                "node": "node6",
                "type": "apply-property",
                "argument-count": 3,
                "negation": false,
                "results": {
                  "node": "node6-results"
                },
                "argument1": "STATE",
                "argument2": "id",
                "argument3": "Bluesky"
              },
              "argument2": "next-port",
              "argument3": "port-A"
            }
          },
          "argument2": "id",
          "argument3": "Bluesky"
        },
        "argument2": "speed"
      }
}
Input: Which ship is closest to port-A?
Output:
{
    "node": "node1",
    "type": "min",
    "argument-count": 1,
    "negation": false,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "haversine-formula",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "answer-node": true,
            "results": {
                "node": "node3-results"
            },
            "argument1": "STATE",
            "argument2": "category",
            "argument3": "ship"
        },
        "argument2": {
            "node": "node4",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node4-results"
            },
            "argument1": "STATE",
            "argument2": "id",
            "argument3": "port-A"
        }
}
Input: Which ships going faster than 20 knots?
Output:
{
    "node": "node1",
    "type": "greater-than",
    "argument-count": 2,
    "negation": false,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "answer-node": true,
            "results": {
                "node": "node3-results"
            },
            "argument1": "STATE",
            "argument2": "category",
            "argument3": "ship"
        },
        "argument2": "speed"
    },
    "argument2": 20
}
Input: List the ports within 200 km of the current position of Bluesky.
Output:
{
    "node": "node1",
    "type": "less-than",
    "argument-count": 2,
    "negation": false,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "haversine-formula",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": "STATE",
            "argument2": "id",
            "argument3": "Bluesky"
        },
        "argument2": {
            "node": "node4",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "answer-node": true,
            "results": {
                "node": "node4-results"
            },
            "argument1": "STATE",
            "argument2": "category",
            "argument3": "port"
        }
    },
    "argument2": 200
}
Input: What's the ETA/when will Bluesky get to port-A (make sure it is traveling there)?
Output:
{
    "node": "node1",
    "type": "divide",
    "argument-count": 2,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "haversine-formula",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": {
                "node": "node4",
                "type": "apply-property",
                "argument-count": 3,
                "negation": false,
                "results": {
                    "node": "node4-results"
                },
                "argument1": "STATE",
                "argument2": "id",
                "argument3": "Bluesky"
            },
            "argument2": "next-port",
            "argument3": "port-A"
        }
        "argument2": {
            "node": "node5",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node5-results"
            },
            "argument1": "STATE",
            "argument2": "id",
            "argument3": "port-A"
        }
    },
    "argument2": {
        "node": "node6",
        "type": "convert-units",
        "argument-count": 3,
        "negation": false,
        "results": {
            "node": "node6-results"
        },
        "argument1": {
            "node": "node7",
            "type": "attribute-of",
            "argument-count": 2,
            "negation": false,
            "results": {
                "node": "node7-results"
            },
            "argument1": "node3",
            "argument2": "speed"
        },
        "argument2": "knots",
        "argument3": "kph"
    }
}
Input: Are any ships carrying crude oil moving faster than 10 knots?
Output:
{
    "node": "node1",
    "type": "greater-than",
    "argument-count": 2,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": {
                "node": "node4",
                "type": "apply-property",
                "argument-count": 3,
                "negation": false,
                "results": {
                    "node": "node4-results"
                },
                "argument1": "STATE",
                "argument2": "category",
                "argument3": "ship"
            },
            "argument2": "cargo",
            "argument3": "oil"
        },
        "argument2": "speed"
    },
    "argument2": 20
}
Input: Of all the ships in the Tsushima Strait, which is the fastest?
Output:
{
    "node": "node1",
    "type": "max",
    "argument-count": 1,
    "negation": false,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "answer-node": true,
            "results": {
                "node": "node3-results"
            },
            "argument1": "STATE",
            "argument2": "area",
            "argument3": "Tsushima Strait"
        },
        "argument2": "speed"
    }
}
Input: How long did it take Bluesky to go from port-A to port-B?
Output:
{
    "node": "node1",
    "type": "difference",
    "argument-count": 2,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1":{
                "node": "node4",
                "type": "when",
                "argument-count": 1,
                "negation": false,
                "results": {
                    "node": "node4-results"
                },
                "argument1": {
                    "node": "node5",
                    "type": "apply-property",
                    "argument-count": 3,
                    "negation": false,
                    "results": {
                        "node": "node5-results"
                    },
                    "argument1": {
                        "node": "node6",
                        "type": "apply-property",
                        "argument-count": 3,
                        "negation": false,
                        "results": {
                            "node": "node6-results"
                        },
                        "argument1": "STATE",
                        "argument2": "id",
                        "argument3": "Bluesky"
                    },
                    "argument2": "current-port",
                    "argument3": "port-A"
                }
            },
            "argument2": "category",
            "argument3": "time"
        },
        "argument2": "total-elapsed-minutes"
    },
    "argument2": {
        "node": "node7",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node7-results"
        },
        "argument1": {
            "node": "node8",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node8-results"
            },
            "argument1":{
                "node": "node9",
                "type": "when",
                "argument-count": 1,
                "negation": false,
                "results": {
                    "node": "node9-results"
                },
                "argument1": {
                    "node": "node10",
                    "type": "apply-property",
                    "argument-count": 3,
                    "negation": false,
                    "results": {
                        "node": "node10-results"
                    },
                    "argument1": {
                        "node": "node11",
                        "type": "apply-property",
                        "argument-count": 3,
                        "negation": false,
                        "results": {
                            "node": "node11-results"
                        },
                        "argument1": "STATE",
                        "argument2": "id",
                        "argument3": "Bluesky"
                    },
                    "argument2": "current-port",
                    "argument3": "port-B"
                }
            },
            "argument2": "category",
            "argument3": "time"
        },
        "argument2": "total-elapsed-minutes"
    }
}
Input: Which ship will arrive at its destination port first?
Output:
{
    "node": "node1",
    "type": "min",
    "argument-count": 1,
    "negation": false,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "divide",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "haversine-formula",
            "argument-count": 2,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": {
                "node": "node4",
                "type": "apply-property",
                "argument-count": 3,
                "negation": false,
                "answer-node": true,
                "results": {
                    "node": "node4-results"
                },
                "argument1": "STATE",
                "argument2": "category",
                "argument3": "ship"
            },
            "argument2": {
                "node": "node5",
                "type": "apply-property",
                "argument-count": 3,
                "negation": false,
                "results": {
                    "node": "node5-results"
                },
                "argument1": "STATE",
                "argument2": "id",
                "argument3": {
                    "node": "node6",
                    "type": "attribute-of",
                    "argument-count": 2,
                    "negation": false,
                    "results": {
                        "node": "node6-results"
                    },
                    "argument1": "node4",
                    "argument2": "next-port"
                }
            }
        },
        "argument2": {
            "node": "node7",
            "type": "convert-units",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node7-results"
            },
            "argument1": {
                "node": "node8",
                "type": "attribute-of",
                "argument-count": 2,
                "negation": false,
                "results": {
                    "node": "node8-results"
                },
                "argument1": "node4",
                "argument2": "speed"
            },
            "argument2": "knots",
            "argument3": "kph"
        }
    }
}
Input: Is any port farther south than the Bluesky?
Output:
{
    "node": "node1",
    "type": "less-than",
    "argument-count": 2,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": "STATE",
            "argument2": "category",
            "argument3": "port"
        },
        "argument2": "latitude"
    },
    "argument2": {
        "node": "node4",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node4-results"
        },
        "argument1": {
            "node": "node5",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node5-results"
            },
            "argument1": "STATE",
            "argument2": "id",
            "argument3": "Bluesky"
        },
        "argument2": "latitude"
    }
}
Input: While the Bluesky was docked at port-A, was the Oceanic going north?
Output:
{
    "node": "node1",
    "type": "equal",
    "argument-count": 2,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": {
                "node": "node4",
                "type": "while",
                "argument-count": 1,
                "negation": false,
                "results": {
                    "node": "node4-results"
                },
                "argument1": {
                    "node": "node5",
                    "type": "apply-property",
                    "argument-count": 3,
                    "negation": false,
                    "results": {
                        "node": "node5-results"
                    },
                    "argument1": {
                        "node": "node6",
                        "type": "apply-property",
                        "argument-count": 3,
                        "negation": false,
                        "results": {
                            "node": "node6-results"
                        },
                        "argument1": "STATE",
                        "argument2": "id",
                        "argument3": "Bluesky"
                    },
                    "argument2": "current-port",
                    "argument3": "port-A"
                }
            },
            "argument2": "id",
            "argument3": "Oceanic"
        },
        "argument2": "direction"
    },
    "argument2": "north"
}
Input: Which target ship is traveling the fastest?
Output:
{
    "node": "node1",
    "type": "max",
    "argument-count": 1,
    "negation": false,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "answer-node": true,
            "results": {
                "node": "node3-results"
            },
            "argument1": "STATE",
            "argument2": "category",
            "argument3": "ship"
        },
        "argument2": "speed"
    }
}
Input: Is the Bluesky currently docked at port-A or en route?
Output:
{
    "node": "node1",
    "type": "or",
    "argument-count": 2,
    "negation": false,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "equal",
        "argument-count": 2,
        "answer-node": true,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "attribute-of",
            "argument-count": 2,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": {
                "node": "node4",
                "type": "apply-property",
                "argument-count": 3,
                "negation": false,
                "results": {
                    "node": "node4-results"
                },
                "argument1": "STATE",
                "argument2": "id",
                "argument3": "Bluesky"
            },
            "argument2": "current-port"
        },
        "argument2": "port-A"
    },
    "argument2": {
        "node": "node5",
        "type": "equal",
        "argument-count": 2,
        "negation": false,
        "answer-node": true,
        "results": {
            "node": "node5-results"
        },
        "argument1": {
            "node": "node6",
            "type": "attribute-of",
            "argument-count": 2,
            "negation": false,
            "results": {
                "node": "node6-results"
            },
            "argument1": {
                "node": "node7",
                "type": "apply-property",
                "argument-count": 3,
                "negation": false,
                "results": {
                    "node": "node7-results"
                },
                "argument1": "STATE",
                "argument2": "id",
                "argument3": "Bluesky"
            },
            "argument2": "next-port"
        },
        "argument2": "port-A"
    }
}
Input: How close did Bluesky get to Oceanic while it was going South?
Output:
{
    "node": "node1",
    "type": "min",
    "argument-count": 1,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "haversine-formula",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": {
                "node": "node4",
                "type": "while",
                "argument-count": 1,
                "negation": false,
                "results": {
                    "node": "node4-results"
                },
                "argument1": {
                    "node": "node5",
                    "type": "apply-property",
                    "argument-count": 3,
                    "negation": false,
                    "results": {
                        "node": "node5-results"
                    },
                    "argument1": {
                        "node": "node6",
                        "type": "apply-property",
                        "argument-count": 3,
                        "negation": false,
                        "results": {
                            "node": "node6-results"
                        },
                        "argument1": "STATE",
                        "argument2": "id",
                        "argument3": "Bluesky"
                    },
                    "argument2": "direction",
                    "argument3": "south"
                }
            },
            "argument2": "id",
            "argument3": "Bluesky"
        },
        "argument2": {
            "node": "node7",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node7-results"
            },
            "argument1": "node4",
            "argument2": "id",
            "argument3": "Oceanic"
        }
    }
}
Input: When Bluesky was last at port-A, how close did Oceanic get to it?
Output:
{
    "node": "node1",
    "type": "min",
    "argument-count": 1,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "haversine-formula",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": {
                "node": "node4",
                "type": "while",
                "argument-count": 1,
                "negation": false,
                "results": {
                    "node": "node4-results"
                },
                "argument1": {
                    "node": "node5",
                    "type": "apply-property",
                    "argument-count": 3,
                    "negation": false,
                    "results": {
                        "node": "node5-results"
                    },
                    "argument1": {
                        "node": "node6",
                        "type": "apply-property",
                        "argument-count": 3,
                        "negation": false,
                        "results": {
                            "node": "node6-results"
                        },
                        "argument1": "STATE",
                        "argument2": "id",
                        "argument3": "Bluesky"
                    },
                    "argument2": "current-port",
                    "argument3": "port-A"
                }
            },
            "argument2": "id",
            "argument3": "Bluesky"
        },
        "argument2": {
            "node": "node7",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node7-results"
            },
            "argument1": "node4",
            "argument2": "id",
            "argument3": "Oceanic"
        }
    }
}
Input: Is Bluesky within 15 nautical miles of port-A and heading south?
Output:
{
    "node": "node1",
    "type": "and",
    "argument-count": 2,
    "negation": false,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "less-than",
        "argument-count": 2,
        "negation": false,
        "answer-node": true,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "haversine-formula",
            "argument-count": 2,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": {
                "node": "node4",
                "type": "apply-property",
                "argument-count": 3,
                "negation": false,
                "results": {
                    "node": "node4-results"
                },
                "argument1": "STATE",
                "argument2": "id",
                "argument3": "Bluesky"
            },
            "argument2": {
                "node": "node5",
                "type": "apply-property",
                "argument-count": 3,
                "negation": false,
                "results": {
                    "node": "node5-results"
                },
                "argument1": "STATE",
                "argument2": "id",
                "argument3": "port-A"
            }
        },
        "argument2": {
            "node": "node6",
            "type": "convert-units",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node6-results"
            },
            "argument1": 10,
            "argument2": "nautical-mile",
            "argument3": "km"
        }
    },
    "argument2": {
        "node": "node7",
        "type": "equal",
        "argument-count": 2,
        "negation": false,
        "answer-node": true,
        "results": {
            "node": "node7-results"
        },
        "argument1": {
            "node": "node8",
            "type": "attribute-of",
            "argument-count": 2,
            "negation": false,
            "results": {
                "node": "node8-results"
            },
            "argument1": "node4",
            "argument2": "direction"
        },
        "argument2": "south"
    }
}
Input: Which of the five ports currently has a ship docked?
Output:
{
    "node": "node1",
    "type": "attribute-of",
    "argument-count": 2,
    "negation": false,
    "answer-node": true,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "apply-property",
        "argument-count": 3,
        "negation": false,
        "results": {
        "node": "node2-results"
        },
        "argument1": "STATE",
        "argument2": "category",
        "argument3": "ship"
    },
    "argument2": "current-port"
}
Input: What ship is north of port-A?
Output:
{
    "node": "node1",
    "type": "greater-than",
    "argument-count": 2,
    "negation": false,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "answer-node": true,
            "results": {
                "node": "node3-results"
            },
            "argument1": "STATE",
            "argument2": "category",
            "argument3": "ship"
        },
        "argument2": "latitude"
    },
    "argument2": {
        "node": "node4",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node4-results"
        },
        "argument1": {
            "node": "node5",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node5-results"
            },
            "argument1": "STATE",
            "argument2": "id",
            "argument3": "Busan"
        },
        "argument2": "latitude"
    }
}
Input: Where was Oceanic when Bluesky arrived at port-A?
Output:
{
    "node": "node1",
    "type": "join",
    "argument-count": 2,
    "negation": false,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "answer-node": true,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": {
                "node": "node4",
                "type": "when",
                "argument-count": 1,
                "negation": false,
                "results": {
                    "node": "node4-results"
                },
                "argument1": {
                    "node": "node5",
                    "type": "apply-property",
                    "argument-count": 3,
                    "negation": false,
                    "results": {
                        "node": "node5-results"
                    },
                    "argument1": {
                        "node": "node6",
                        "type": "apply-property",
                        "argument-count": 3,
                        "negation": false,
                        "results": {
                            "node": "node6-results"
                        },
                        "argument1": "STATE",
                        "argument2": "id",
                        "argument3": "Bluesky"
                    },
                    "argument2": "current-port",
                    "argument3": "port-A"
                }
            },
            "argument2": "id",
            "argument3": "Bluesky"
        },
        "argument2": "latitude"
    },
    argument2: {
        "node": "node7",
        "type": "attribute-of",
        "argument-count": 2,
        "negation": false,
        "answer-node": true,
        "results": {
            "node": "node7-results"
        },
        "argument1": "node3",
        "argument2": "longitude"
    }
}
Input: Which port is closest to the Bluesky?
{
    "node": "node1",
    "type": "min",
    "argument-count": 1,
    "negation": false,
    "results": {
        "node": "node1-results"
    },
    "argument1": {
        "node": "node2",
        "type": "haversine-formula",
        "argument-count": 2,
        "negation": false,
        "results": {
            "node": "node2-results"
        },
        "argument1": {
            "node": "node3",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "results": {
                "node": "node3-results"
            },
            "argument1": "STATE",
            "argument2": "id",
            "argument3": "Bluesky"
        },
        "argument2": {
            "node": "node4",
            "type": "apply-property",
            "argument-count": 3,
            "negation": false,
            "answer-node": true,
            "results": {
                "node": "node4-results"
            },
            "argument1": "STATE",
            "argument2": "category",
            "argument3": "port"
        }
    }
}
